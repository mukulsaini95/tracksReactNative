{"ast":null,"code":"var _jsxFileName = \"/home/mrbug/projects/mobile/tracks/src/components/App.js\";\nimport React, { useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nvar Stack = createStackNavigator();\nimport CreateTrack from \"../screens/CreateTrack\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nimport TrackDetail from \"../screens/TrackDetail\";\nimport TrackLIst from \"../screens/TrackLIst\";\nimport AccountScreen from \"../screens/AccountScreen\";\nimport { Provider as AuthProvider } from \"../context/AuthContext\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\nvar Navigator = Stack.Navigator,\n    Screen = Stack.Screen;\nexport default function App() {\n  var Logging = [{\n    name: \"RegisterScreen\",\n    component: RegisterScreen,\n    options: {\n      title: \"Register\"\n    }\n  }, {\n    name: \"LoginScreen\",\n    component: LoginScreen,\n    options: {\n      title: \"Login\",\n      headerLeft: null\n    }\n  }];\n  var LoggedIn = [{\n    name: \"CreateTrack\",\n    component: CreateTrack,\n    options: {}\n  }, {\n    name: \"TrackDetail\",\n    component: TrackDetail,\n    options: {}\n  }, {\n    name: \"TrackList\",\n    component: TrackLIst,\n    options: {}\n  }, {\n    name: \"AccountScreen\",\n    component: AccountScreen,\n    options: {}\n  }];\n  var state = useContext(AuthContext);\n  console.log('state from app: ', state);\n\n  if (state.signInSuccess) {\n    return React.createElement(Navigator, {\n      initialRouteName: \"RegisterScreen\",\n      headerMode: \"screen\",\n      screenOptions: {\n        headerTintColor: 'white',\n        headerStyle: {\n          backgroundColor: \"black\",\n          color: \"white\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 4\n      }\n    }, Logging.map(function (temp, index) {\n      return React.createElement(Screen, {\n        name: temp.name,\n        key: index,\n        component: temp.component,\n        options: temp.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }\n      });\n    }));\n  } else {}\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/mrbug/projects/mobile/tracks/src/components/App.js"],"names":["React","useContext","NavigationContainer","createStackNavigator","Stack","CreateTrack","LoginScreen","RegisterScreen","TrackDetail","TrackLIst","AccountScreen","Provider","AuthProvider","Context","AuthContext","Navigator","Screen","App","Logging","name","component","options","title","headerLeft","LoggedIn","state","console","log","signInSuccess","headerTintColor","headerStyle","backgroundColor","color","map","temp","index","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;AAGA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;AACA,OAAOE,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,OAAOC,SAAP;AACA,OAAOC,aAAP;AACA,SAASC,QAAQ,IAAIC,YAArB;AACA,SAASC,OAAO,IAAIC,WAApB;IAEQC,S,GAAsBX,K,CAAtBW,S;IAAWC,M,GAAWZ,K,CAAXY,M;AAGnB,eAAe,SAASC,GAAT,GAAe;AAC7B,MAAMC,OAAO,GAAG,CACf;AAAEC,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,SAAS,EAAEb,cAArC;AAAqDc,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAA9D,GADe,EAEf;AAAEH,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,SAAS,EAAEd,WAAlC;AAA+Ce,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,UAAU,EAAE;AAA9B;AAAxD,GAFe,CAAhB;AAKA,MAAMC,QAAQ,GAAG,CAChB;AAAEL,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,SAAS,EAAEf,WAAlC;AAA+CgB,IAAAA,OAAO,EAAE;AAAxD,GADgB,EAEhB;AAAEF,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,SAAS,EAAEZ,WAAlC;AAA+Ca,IAAAA,OAAO,EAAE;AAAxD,GAFgB,EAGhB;AAAEF,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,SAAS,EAAEX,SAAhC;AAA2CY,IAAAA,OAAO,EAAE;AAApD,GAHgB,EAIhB;AAAEF,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,SAAS,EAAEV,aAApC;AAAmDW,IAAAA,OAAO,EAAE;AAA5D,GAJgB,CAAjB;AAOA,MAAMI,KAAK,GAAGxB,UAAU,CAACa,WAAD,CAAxB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAhC;;AAMA,MAAIA,KAAK,CAACG,aAAV,EAAyB;AACxB,WACC,oBAAC,SAAD;AAAW,MAAA,gBAAgB,EAAC,gBAA5B;AAA6C,MAAA,UAAU,EAAC,QAAxD;AAAiE,MAAA,aAAa,EAAE;AAAEC,QAAAA,eAAe,EAAE,OAAnB;AAA4BC,QAAAA,WAAW,EAAE;AAAEC,UAAAA,eAAe,EAAE,OAAnB;AAA4BC,UAAAA,KAAK,EAAE;AAAnC;AAAzC,OAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEd,OAAO,CAACe,GAAR,CAAY,UAACC,IAAD,EAAOC,KAAP;AAAA,aACZ,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAED,IAAI,CAACf,IAAnB;AAAyB,QAAA,GAAG,EAAEgB,KAA9B;AAAqC,QAAA,SAAS,EAAED,IAAI,CAACd,SAArD;AAAgE,QAAA,OAAO,EAAEc,IAAI,CAACb,OAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADY;AAAA,KAAZ,CADF,CADD;AAOA,GARD,MAQO,CAEN;AAED;AAED,IAAMe,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAChCC,EAAAA,SAAS,EAAE;AACVC,IAAAA,IAAI,EAAE,CADI;AAEVT,IAAAA,eAAe,EAAE,MAFP;AAGVU,IAAAA,UAAU,EAAE,QAHF;AAIVC,IAAAA,cAAc,EAAE;AAJN;AADqB,CAAlB,CAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nconst Stack = createStackNavigator();\nimport CreateTrack from \"../screens/CreateTrack\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nimport TrackDetail from \"../screens/TrackDetail\";\nimport TrackLIst from \"../screens/TrackLIst\";\nimport AccountScreen from \"../screens/AccountScreen\";\nimport { Provider as AuthProvider } from \"../context/AuthContext\"\nimport { Context as AuthContext } from \"../context/AuthContext\"\n\nconst { Navigator, Screen } = Stack;\n// import AsyncStorage from \"@react-native-community/async-storage\"\n\nexport default function App() {\n\tconst Logging = [\n\t\t{ name: \"RegisterScreen\", component: RegisterScreen, options: { title: \"Register\" } },\n\t\t{ name: \"LoginScreen\", component: LoginScreen, options: { title: \"Login\", headerLeft: null } },\n\t]\n\n\tconst LoggedIn = [\n\t\t{ name: \"CreateTrack\", component: CreateTrack, options: {} },\n\t\t{ name: \"TrackDetail\", component: TrackDetail, options: {} },\n\t\t{ name: \"TrackList\", component: TrackLIst, options: {} },\n\t\t{ name: \"AccountScreen\", component: AccountScreen, options: {} }\n\t]\n\n\tconst state = useContext(AuthContext);\n\tconsole.log('state from app: ', state);\n\n\t// var getToken = async ()=> await AsyncStorage.getItem(\"token\").then((value) => value);\n\t// var token = getToken()\n\n\t// console.log('token: ', token);\n\tif (state.signInSuccess) {\n\t\treturn (\n\t\t\t<Navigator initialRouteName=\"RegisterScreen\" headerMode=\"screen\" screenOptions={{ headerTintColor: 'white', headerStyle: { backgroundColor: \"black\", color: \"white\" }, }}>\n\t\t\t\t{Logging.map((temp, index) => (\n\t\t\t\t\t<Screen name={temp.name} key={index} component={temp.component} options={temp.options} />\n\t\t\t\t))}\n\t\t\t</Navigator>\n\t\t);\n\t} else {\n\t\t\n\t}\n\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#fff',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}