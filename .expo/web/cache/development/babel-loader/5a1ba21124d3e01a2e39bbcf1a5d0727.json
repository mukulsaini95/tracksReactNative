{"ast":null,"code":"var _jsxFileName = \"/home/mrbug/projects/mobile/tracks/App.js\";\nimport React, { useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nvar Stack = createStackNavigator();\nimport CreateTrack from \"./src/screens/CreateTrack\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport RegisterScreen from \"./src/screens/RegisterScreen\";\nimport TrackDetail from \"./src/screens/TrackDetail\";\nimport TrackLIst from \"./src/screens/TrackLIst\";\nimport AccountScreen from \"./src/screens/AccountScreen\";\nimport { Provider as AuthProvider } from \"./src/context/AuthContext\";\nimport { Context as AuthContext } from \"./src/context/AuthContext\";\nvar Navigator = Stack.Navigator,\n    Screen = Stack.Screen;\nexport default function App() {\n  var Logging = [{\n    name: \"LoginScreen\",\n    component: LoginScreen,\n    options: {\n      title: \"Login\"\n    }\n  }, {\n    name: \"RegisterScreen\",\n    component: RegisterScreen,\n    options: {}\n  }];\n  var LoggedIn = [{\n    name: \"CreateTrack\",\n    component: CreateTrack,\n    options: {}\n  }, {\n    name: \"TrackDetail\",\n    component: TrackDetail,\n    options: {}\n  }, {\n    name: \"TrackLIst\",\n    component: TrackLIst,\n    options: {}\n  }, {\n    name: \"AccountScreen\",\n    component: AccountScreen,\n    options: {}\n  }];\n\n  var _useContext = useContext(AuthContext),\n      state = _useContext.state;\n\n  console.log('state: ', state);\n\n  if (state && state.isSingedIn) {\n    return React.createElement(NavigationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, React.createElement(Navigator, {\n      initialRouteName: \"LoginScreen\",\n      headerMode: \"screen\",\n      screenOptions: {\n        headerTintColor: 'white',\n        headerStyle: {\n          backgroundColor: \"black\",\n          color: \"white\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, LoggedIn.map(function (temp, index) {\n      return React.createElement(Screen, {\n        name: temp.name,\n        key: index,\n        component: temp.component,\n        options: temp.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      });\n    })));\n  } else {\n    return React.createElement(NavigationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, React.createElement(Navigator, {\n      initialRouteName: \"TrackLIst\",\n      headerMode: \"screen\",\n      screenOptions: {\n        headerTintColor: 'white',\n        headerStyle: {\n          backgroundColor: \"black\",\n          color: \"white\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, Logging.map(function (temp, index) {\n      return React.createElement(Screen, {\n        name: temp.name,\n        key: index,\n        component: temp.component,\n        options: temp.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      });\n    })));\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/mrbug/projects/mobile/tracks/App.js"],"names":["React","useContext","NavigationContainer","createStackNavigator","Stack","CreateTrack","LoginScreen","RegisterScreen","TrackDetail","TrackLIst","AccountScreen","Provider","AuthProvider","Context","AuthContext","Navigator","Screen","App","Logging","name","component","options","title","LoggedIn","state","console","log","isSingedIn","headerTintColor","headerStyle","backgroundColor","color","map","temp","index","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nconst Stack = createStackNavigator();\nimport CreateTrack from \"./src/screens/CreateTrack\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport RegisterScreen from \"./src/screens/RegisterScreen\";\nimport TrackDetail from \"./src/screens/TrackDetail\";\nimport TrackLIst from \"./src/screens/TrackLIst\";\nimport AccountScreen from \"./src/screens/AccountScreen\";\nimport { Provider as AuthProvider } from \"./src/context/AuthContext\"\nimport { Context as AuthContext } from \"./src/context/AuthContext\"\n\nconst { Navigator, Screen } = Stack;\n\nexport default function App() {\n  const Logging = [\n    { name: \"LoginScreen\", component: LoginScreen, options: { title: \"Login\" } },\n    { name: \"RegisterScreen\", component: RegisterScreen, options: {} },\n  ]\n  const LoggedIn = [\n    { name: \"CreateTrack\", component: CreateTrack, options: {} },\n    { name: \"TrackDetail\", component: TrackDetail, options: {} },\n    { name: \"TrackLIst\", component: TrackLIst, options: {} },\n    { name: \"AccountScreen\", component: AccountScreen, options: {} }\n  ]\n\n  const { state } = useContext(AuthContext);\n  console.log('state: ', state);\n  if ( state && state.isSingedIn) {\n    return (\n      <NavigationContainer>\n        <Navigator initialRouteName=\"LoginScreen\" headerMode=\"screen\" screenOptions={{ headerTintColor: 'white', headerStyle: { backgroundColor: \"black\", color: \"white\" }, }}>\n          {LoggedIn.map((temp, index) => (\n            <Screen name={temp.name} key={index} component={temp.component} options={temp.options} />\n          ))}\n        </Navigator>\n      </NavigationContainer>\n    );\n  } else {\n    return (\n      <NavigationContainer>\n        <Navigator initialRouteName=\"TrackLIst\" headerMode=\"screen\" screenOptions={{ headerTintColor: 'white', headerStyle: { backgroundColor: \"black\", color: \"white\" }, }}>\n          {Logging.map((temp, index) => (\n            <Screen name={temp.name} key={index} component={temp.component} options={temp.options} />\n          ))}\n        </Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}