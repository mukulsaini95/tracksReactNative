{"ast":null,"code":"import * as Location from 'expo-location';\nvar tenMetersWithDegrees = 0.0001;\n\nvar getLocation = function getLocation(increment) {\n  return {\n    timestamp: 10000000,\n    coords: {\n      speed: 0,\n      heading: 0,\n      accuracy: 5,\n      altitudeAccuracy: 5,\n      altitude: 5,\n      longitude: -122.0312186 + increment * tenMetersWithDegrees,\n      latitude: 37.33233141 + increment * tenMetersWithDegrees\n    }\n  };\n};\n\nvar counter = 0;\nsetInterval(function () {\n  Location.EventEmitter.emit('Expo.locationChanged', {\n    watchId: Location._getCurrentWatchId(),\n    location: getLocation(counter)\n  });\n  counter++;\n}, 1000);","map":{"version":3,"sources":["/home/mrbug/projects/mobile/tracks/src/_mockLocation.js"],"names":["Location","tenMetersWithDegrees","getLocation","increment","timestamp","coords","speed","heading","accuracy","altitudeAccuracy","altitude","longitude","latitude","counter","setInterval","EventEmitter","emit","watchId","_getCurrentWatchId","location"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,eAA1B;AAEA,IAAMC,oBAAoB,GAAG,MAA7B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,SAAS,EAAI;AAC/B,SAAO;AACLC,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,QAAQ,EAAE,CAHJ;AAINC,MAAAA,gBAAgB,EAAE,CAJZ;AAKNC,MAAAA,QAAQ,EAAE,CALJ;AAMNC,MAAAA,SAAS,EAAE,CAAC,WAAD,GAAeR,SAAS,GAAGF,oBANhC;AAONW,MAAAA,QAAQ,EAAE,cAAcT,SAAS,GAAGF;AAP9B;AAFH,GAAP;AAYD,CAbD;;AAeA,IAAIY,OAAO,GAAG,CAAd;AACAC,WAAW,CAAC,YAAM;AAChBd,EAAAA,QAAQ,CAACe,YAAT,CAAsBC,IAAtB,CAA2B,sBAA3B,EAAmD;AACjDC,IAAAA,OAAO,EAAEjB,QAAQ,CAACkB,kBAAT,EADwC;AAEjDC,IAAAA,QAAQ,EAAEjB,WAAW,CAACW,OAAD;AAF4B,GAAnD;AAIAA,EAAAA,OAAO;AACR,CANU,EAMR,IANQ,CAAX","sourcesContent":["import * as Location from 'expo-location';\n\nconst tenMetersWithDegrees = 0.0001;\n\nconst getLocation = increment => {\n  return {\n    timestamp: 10000000,\n    coords: {\n      speed: 0,\n      heading: 0,\n      accuracy: 5,\n      altitudeAccuracy: 5,\n      altitude: 5,\n      longitude: -122.0312186 + increment * tenMetersWithDegrees,\n      latitude: 37.33233141 + increment * tenMetersWithDegrees\n    }\n  };\n};\n\nlet counter = 0;\nsetInterval(() => {\n  Location.EventEmitter.emit('Expo.locationChanged', {\n    watchId: Location._getCurrentWatchId(),\n    location: getLocation(counter)\n  });\n  counter++;\n}, 1000);\n"]},"metadata":{},"sourceType":"module"}