{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport createDataContext from \"./createDataContext\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport trackApi from \"../Api/api\";\n\nvar authReducer = function authReducer(state, action) {\n  console.log('state test: ', state);\n\n  switch (action.type) {\n    case \"singUpError\":\n      return {\n        singUpError: action.err\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar signUp = function signUp(dispatch) {\n  return function _callee(payload) {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(trackApi.post(\"/singup\", payload, {\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            console.log('response: ', response);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", response.data.token));\n\n          case 7:\n            dispatch({\n              type: \"singUpSuccess\",\n              token: response.data.token\n            });\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch({\n              type: \"singUpError\",\n              payload: _context.t0\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n};\n\nvar _createDataContext = createDataContext(authReducer, {\n  signUp: signUp\n}, {\n  isSingedIn: false\n}),\n    Context = _createDataContext.Context,\n    Provider = _createDataContext.Provider;\n\nexport { Context, Provider };","map":{"version":3,"sources":["/home/mrbug/projects/mobile/tracks/src/context/AuthContext.js"],"names":["createDataContext","AsyncStorage","trackApi","authReducer","state","action","console","log","type","singUpError","err","signUp","dispatch","payload","post","headers","Accept","response","setItem","data","token","isSingedIn","Context","Provider"],"mappings":";AAAA,OAAOA,iBAAP;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,QAAP;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,KAA5B;;AACA,UAAQC,MAAM,CAACG,IAAf;AACC,SAAK,aAAL;AACC,aAAO;AAACC,QAAAA,WAAW,EAAEJ,MAAM,CAACK;AAArB,OAAP;;AACD;AACC,aAAON,KAAP;AAJF;AAOA,CATD;;AAYA,IAAMO,MAAM,GAAI,SAAVA,MAAU,CAAAC,QAAQ;AAAA,SAAG,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEFX,QAAQ,CAACY,IAAT,CAAc,SAAd,EAAwBD,OAAxB,EAAgC;AAACE,cAAAA,OAAO,EAAE;AAChEC,gBAAAA,MAAM,EAAE,kBADwD;AAEhE,gCAAgB;AAFgD;AAAV,aAAhC,CAFE;;AAAA;AAEnBC,YAAAA,QAFmB;AAMzBX,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BU,QAA1B;AANyB;AAAA,6CAOnBhB,YAAY,CAACiB,OAAb,CAAqB,OAArB,EAA6BD,QAAQ,CAACE,IAAT,CAAcC,KAA3C,CAPmB;;AAAA;AAQzBR,YAAAA,QAAQ,CAAC;AAACJ,cAAAA,IAAI,EAAC,eAAN;AAAsBY,cAAAA,KAAK,EAACH,QAAQ,CAACE,IAAT,CAAcC;AAA1C,aAAD,CAAR;AARyB;AAAA;;AAAA;AAAA;AAAA;AAUzBR,YAAAA,QAAQ,CAAC;AACRJ,cAAAA,IAAI,EAAC,aADG;AAERK,cAAAA,OAAO;AAFC,aAAD,CAAR;;AAVyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;AAAA,CAAxB;;yBAkBqCb,iBAAiB,CAACG,WAAD,EAAc;AAACQ,EAAAA,MAAM,EAANA;AAAD,CAAd,EAAwB;AAAEU,EAAAA,UAAU,EAAE;AAAd,CAAxB,C;IAAvCC,O,sBAAAA,O;IAASC,Q,sBAAAA,Q","sourcesContent":["import createDataContext from \"./createDataContext\"\nimport AsyncStorage from \"@react-native-community/async-storage\"\nimport trackApi from \"../Api/api\"\nconst authReducer = (state, action) => {\n\tconsole.log('state test: ', state);\n\tswitch (action.type) {\n\t\tcase \"singUpError\" :\n\t\t\treturn {singUpError :action.err}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n\n}\n\n\nconst signUp  = dispatch =>async (payload)=>{\n\ttry{\n\t\tconst response = await trackApi.post(\"/singup\",payload,{headers: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t  }});\n\t\tconsole.log('response: ', response);\n\t\tawait AsyncStorage.setItem(\"token\",response.data.token)\n\t\tdispatch({type:\"singUpSuccess\",token:response.data.token})\n\t}catch(err){\n\t\tdispatch({\n\t\t\ttype:\"singUpError\",\n\t\t\tpayload:err\n\t\t})\n\t}\n\n}\n\nexport const { Context, Provider } = createDataContext(authReducer, {signUp}, { isSingedIn: false })\n\n\n"]},"metadata":{},"sourceType":"module"}