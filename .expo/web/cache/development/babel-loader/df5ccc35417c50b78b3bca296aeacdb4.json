{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/mrbug/projects/mobile/tracks/src/components/App.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nvar Stack = createStackNavigator();\nimport CreateTrack from \"../screens/CreateTrack\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nimport TrackDetail from \"../screens/TrackDetail\";\nimport TrackLIst from \"../screens/TrackLIst\";\nimport AccountScreen from \"../screens/AccountScreen\";\nimport { Provider as AuthProvider } from \"../context/AuthContext\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nvar _createBottomTabNavig = createBottomTabNavigator(),\n    Navigator = _createBottomTabNavig.Navigator,\n    Screen = _createBottomTabNavig.Screen;\n\nexport default function App() {\n  var LoggedIn = [{\n    name: \"CreateTrack\",\n    component: CreateTrack,\n    options: {}\n  }, {\n    name: \"TrackDetail\",\n    component: TrackDetail,\n    options: {}\n  }, {\n    name: \"TrackList\",\n    component: TrackLIst,\n    options: {\n      title: \"Truck\"\n    }\n  }, {\n    name: \"AccountScreen\",\n    component: AccountScreen,\n    options: {}\n  }, {\n    name: \"RegisterScreen\",\n    component: RegisterScreen,\n    options: {\n      title: \"Register\"\n    }\n  }, {\n    name: \"LoginScreen\",\n    component: LoginScreen,\n    options: {\n      title: \"Login\",\n      headerLeft: null\n    }\n  }];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fetching = _useState2[0],\n      setFetching = _useState2[1];\n\n  var state = useContext(AuthContext);\n\n  if (fetching) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }\n    }, \"fetching\");\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(Navigator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 4\n      }\n    }, React.createElement(Screen, {\n      name: \"TrackList\",\n      component: TrackLIst,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }), React.createElement(Screen, {\n      name: \"CreateTrack\",\n      component: CreateTrack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }), React.createElement(Screen, {\n      name: \"AccountScreen\",\n      component: AccountScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    })));\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/mrbug/projects/mobile/tracks/src/components/App.js"],"names":["React","useContext","useState","useEffect","NavigationContainer","createStackNavigator","Stack","CreateTrack","LoginScreen","RegisterScreen","TrackDetail","TrackLIst","AccountScreen","Provider","AuthProvider","Context","AuthContext","createBottomTabNavigator","Navigator","Screen","App","LoggedIn","name","component","options","title","headerLeft","fetching","setFetching","state","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;;;;AAGA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;AACA,OAAOE,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,OAAOC,SAAP;AACA,OAAOC,aAAP;AACA,SAASC,QAAQ,IAAIC,YAArB;AACA,SAASC,OAAO,IAAIC,WAApB;AACA,SAASC,wBAAT,QAAyC,+BAAzC;;4BAC2BA,wBAAwB,E;IAA5CC,S,yBAAAA,S;IAAUC,M,yBAAAA,M;;AAKjB,eAAe,SAASC,GAAT,GAAe;AAC7B,MAAMC,QAAQ,GAAG,CAChB;AAAEC,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,SAAS,EAAEhB,WAAlC;AAA+CiB,IAAAA,OAAO,EAAE;AAAxD,GADgB,EAEhB;AAAEF,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,SAAS,EAAEb,WAAlC;AAA+Cc,IAAAA,OAAO,EAAE;AAAxD,GAFgB,EAGhB;AAAEF,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,SAAS,EAAEZ,SAAhC;AAA2Ca,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAApD,GAHgB,EAIhB;AAAEH,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,SAAS,EAAEX,aAApC;AAAmDY,IAAAA,OAAO,EAAE;AAA5D,GAJgB,EAKhB;AAAEF,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,SAAS,EAAEd,cAArC;AAAqDe,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAA9D,GALgB,EAMhB;AAAEH,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,SAAS,EAAEf,WAAlC;AAA+CgB,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,UAAU,EAAE;AAA9B;AAAxD,GANgB,CAAjB;;AAD6B,kBASGxB,QAAQ,CAAC,KAAD,CATX;AAAA;AAAA,MAStByB,QATsB;AAAA,MASZC,WATY;;AAU7B,MAAMC,KAAK,GAAG5B,UAAU,CAACe,WAAD,CAAxB;;AAYA,MAAIW,QAAJ,EAAc;AACb,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACA,GAFD,MAEO;AACN,WACC,0CAMA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,SAAS,EAAEhB,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,aAAb;AAA2B,MAAA,SAAS,EAAEJ,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,eAAb;AAA6B,MAAA,SAAS,EAAEK,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CANA,CADD;AAcA;AAED;AAED,IAAMkB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAChCC,EAAAA,SAAS,EAAE;AACVC,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,eAAe,EAAE,MAFP;AAGVC,IAAAA,UAAU,EAAE,QAHF;AAIVC,IAAAA,cAAc,EAAE;AAJN;AADqB,CAAlB,CAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nconst Stack = createStackNavigator();\nimport CreateTrack from \"../screens/CreateTrack\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nimport TrackDetail from \"../screens/TrackDetail\";\nimport TrackLIst from \"../screens/TrackLIst\";\nimport AccountScreen from \"../screens/AccountScreen\";\nimport { Provider as AuthProvider } from \"../context/AuthContext\"\nimport { Context as AuthContext } from \"../context/AuthContext\"\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nconst {Navigator,Screen} = createBottomTabNavigator();\n\n// const { Navigator, Screen } = Stack;\n// import AsyncStorage from \"@react-native-community/async-storage\"\n\nexport default function App() {\n\tconst LoggedIn = [\n\t\t{ name: \"CreateTrack\", component: CreateTrack, options: {} },\n\t\t{ name: \"TrackDetail\", component: TrackDetail, options: {} },\n\t\t{ name: \"TrackList\", component: TrackLIst, options: { title: \"Truck\" } },\n\t\t{ name: \"AccountScreen\", component: AccountScreen, options: {} },\n\t\t{ name: \"RegisterScreen\", component: RegisterScreen, options: { title: \"Register\" } },\n\t\t{ name: \"LoginScreen\", component: LoginScreen, options: { title: \"Login\", headerLeft: null } },\n\t]\n\tconst [fetching, setFetching] = useState(false)\n\tconst state = useContext(AuthContext);\n\n\t// useEffect(() => {\n\t// \tgetToken()\n\t// }, [])\n\n\t// var getToken = async () => {\n\t// \tawait AsyncStorage.getItem(\"token\").then((value) => value);\n\t// \tsetFetching(false)\n\t// }\n\n\n\tif (fetching) {\n\t\treturn <Text>fetching</Text>\n\t} else {\n\t\treturn (\n\t\t\t<>\n\t\t\t{/* <Navigator initialRouteName={getToken ? \"TrackList\" : \"RegisterScreen\"} headerMode=\"screen\" screenOptions={{ headerTintColor: 'white', headerStyle: { backgroundColor: \"black\", color: \"white\" }, }}>\n\t\t\t\t{LoggedIn.map((temp, index) => (\n\t\t\t\t\t<Screen name={temp.name} key={index} component={temp.component} options={temp.options} />\n\t\t\t\t))}\n\t\t\t</Navigator> */}\n\t\t\t<Navigator>\n\t\t\t\t<Screen name=\"TrackList\" component={TrackLIst}/>\n\t\t\t\t<Screen name=\"CreateTrack\" component={CreateTrack}/>\n\t\t\t\t<Screen name=\"AccountScreen\" component={AccountScreen}/>\n\t\t\t</Navigator>\n\t\t\t</>\n\t\t);\n\t}\n\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#fff',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}