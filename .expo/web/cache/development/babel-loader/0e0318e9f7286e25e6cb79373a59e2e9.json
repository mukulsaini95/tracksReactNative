{"ast":null,"code":"var _jsxFileName = \"/home/mrbug/projects/mobile/tracks/src/components/App.js\";\nimport React, { useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nvar Stack = createStackNavigator();\nimport CreateTrack from \"../screens/CreateTrack\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nimport TrackDetail from \"../screens/TrackDetail\";\nimport TrackLIst from \"../screens/TrackLIst\";\nimport AccountScreen from \"../screens/AccountScreen\";\nimport { Provider as AuthProvider } from \"../context/AuthContext\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\nvar Navigator = Stack.Navigator,\n    Screen = Stack.Screen;\nexport default function App() {\n  var Logging = [{\n    name: \"RegisterScreen\",\n    component: RegisterScreen,\n    options: {\n      title: \"Register\"\n    }\n  }, {\n    name: \"LoginScreen\",\n    component: LoginScreen,\n    options: {\n      title: \"Login\",\n      headerLeft: null\n    }\n  }];\n  var state = useContext(AuthContext);\n  console.log('state from app: ', state);\n  return React.createElement(Navigator, {\n    initialRouteName: \"RegisterScreen\",\n    headerMode: \"screen\",\n    screenOptions: {\n      headerTintColor: 'white',\n      headerStyle: {\n        backgroundColor: \"black\",\n        color: \"white\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, Logging.map(function (temp, index) {\n    return React.createElement(Screen, {\n      name: temp.name,\n      key: index,\n      component: temp.component,\n      options: temp.options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    });\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/mrbug/projects/mobile/tracks/src/components/App.js"],"names":["React","useContext","NavigationContainer","createStackNavigator","Stack","CreateTrack","LoginScreen","RegisterScreen","TrackDetail","TrackLIst","AccountScreen","Provider","AuthProvider","Context","AuthContext","Navigator","Screen","App","Logging","name","component","options","title","headerLeft","state","console","log","headerTintColor","headerStyle","backgroundColor","color","map","temp","index","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;AAGA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;AACA,OAAOE,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,OAAOC,SAAP;AACA,OAAOC,aAAP;AACA,SAASC,QAAQ,IAAIC,YAArB;AACA,SAASC,OAAO,IAAIC,WAApB;IAEQC,S,GAAsBX,K,CAAtBW,S;IAAWC,M,GAAWZ,K,CAAXY,M;AAGnB,eAAe,SAASC,GAAT,GAAe;AAC5B,MAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,SAAS,EAAEb,cAArC;AAAqDc,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAA9D,GADc,EAEd;AAAEH,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,SAAS,EAAEd,WAAlC;AAA+Ce,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,UAAU,EAAE;AAA9B;AAAxD,GAFc,CAAhB;AAKA,MAAMC,KAAK,GAAGvB,UAAU,CAACa,WAAD,CAAxB;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAhC;AAMA,SACM,oBAAC,SAAD;AAAW,IAAA,gBAAgB,EAAC,gBAA5B;AAA6C,IAAA,UAAU,EAAC,QAAxD;AAAiE,IAAA,aAAa,EAAE;AAAEG,MAAAA,eAAe,EAAE,OAAnB;AAA4BC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,eAAe,EAAE,OAAnB;AAA4BC,QAAAA,KAAK,EAAE;AAAnC;AAAzC,KAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,OAAO,CAACa,GAAR,CAAY,UAACC,IAAD,EAAOC,KAAP;AAAA,WACX,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAED,IAAI,CAACb,IAAnB;AAAyB,MAAA,GAAG,EAAEc,KAA9B;AAAqC,MAAA,SAAS,EAAED,IAAI,CAACZ,SAArD;AAAgE,MAAA,OAAO,EAAEY,IAAI,CAACX,OAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW;AAAA,GAAZ,CADH,CADN;AAQD;AAED,IAAMa,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETT,IAAAA,eAAe,EAAE,MAFR;AAGTU,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nconst Stack = createStackNavigator();\nimport CreateTrack from \"../screens/CreateTrack\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nimport TrackDetail from \"../screens/TrackDetail\";\nimport TrackLIst from \"../screens/TrackLIst\";\nimport AccountScreen from \"../screens/AccountScreen\";\nimport { Provider as AuthProvider } from \"../context/AuthContext\"\nimport { Context as AuthContext } from \"../context/AuthContext\"\n\nconst { Navigator, Screen } = Stack;\n// import AsyncStorage from \"@react-native-community/async-storage\"\n\nexport default function App() {\n  const Logging = [\n    { name: \"RegisterScreen\", component: RegisterScreen, options: { title: \"Register\" } },\n    { name: \"LoginScreen\", component: LoginScreen, options: { title: \"Login\", headerLeft: null } },\n  ]\n\n  const state = useContext(AuthContext);\n  console.log('state from app: ', state);\n\n  // var getToken = async ()=> await AsyncStorage.getItem(\"token\").then((value) => value);\n  // var token = getToken()\n\n  // console.log('token: ', token);\n  return (\n        <Navigator initialRouteName=\"RegisterScreen\" headerMode=\"screen\" screenOptions={{ headerTintColor: 'white', headerStyle: { backgroundColor: \"black\", color: \"white\" }, }}>\n          {Logging.map((temp, index) => (\n            <Screen name={temp.name} key={index} component={temp.component} options={temp.options} />\n          ))}\n        </Navigator>\n  );\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}