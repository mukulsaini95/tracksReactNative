{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport createDataContext from \"./createDataContext\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nvar authReducer = function authReducer(state, action) {\n  console.log('state test: ', state);\n\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nvar signUp = function signUp(dispatch) {\n  return function _callee(payload) {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(trackApi.post(\"/singup\", payload));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", response.data.token));\n\n          case 6:\n            dispatch({\n              type: \"singUpSuccess\",\n              token: response.data.token\n            });\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch({\n              type: \"singUpError\",\n              payload: \"\"\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n};\n\nvar _createDataContext = createDataContext(authReducer, {\n  signUp: signUp\n}, {\n  isSingedIn: false\n}),\n    Context = _createDataContext.Context,\n    Provider = _createDataContext.Provider;\n\nexport { Context, Provider };","map":{"version":3,"sources":["/home/mrbug/projects/mobile/tracks/src/context/AuthContext.js"],"names":["createDataContext","AsyncStorage","authReducer","state","action","console","log","type","signUp","dispatch","payload","trackApi","post","response","setItem","data","token","isSingedIn","Context","Provider"],"mappings":";AAAA,OAAOA,iBAAP;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,KAA5B;;AACA,UAAQC,MAAM,CAACG,IAAf;AACC;AACC,aAAOJ,KAAP;AAFF;AAKA,CAPD;;AAUA,IAAMK,MAAM,GAAI,SAAVA,MAAU,CAAAC,QAAQ;AAAA,SAAG,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEFC,QAAQ,CAACC,IAAT,CAAc,SAAd,EAAwBF,OAAxB,CAFE;;AAAA;AAEnBG,YAAAA,QAFmB;AAAA;AAAA,6CAGnBZ,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA6BD,QAAQ,CAACE,IAAT,CAAcC,KAA3C,CAHmB;;AAAA;AAIzBP,YAAAA,QAAQ,CAAC;AAACF,cAAAA,IAAI,EAAC,eAAN;AAAsBS,cAAAA,KAAK,EAACH,QAAQ,CAACE,IAAT,CAAcC;AAA1C,aAAD,CAAR;AAJyB;AAAA;;AAAA;AAAA;AAAA;AAMzBP,YAAAA,QAAQ,CAAC;AACRF,cAAAA,IAAI,EAAC,aADG;AAERG,cAAAA,OAAO,EAAC;AAFA,aAAD,CAAR;;AANyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;AAAA,CAAxB;;yBAcqCV,iBAAiB,CAACE,WAAD,EAAc;AAACM,EAAAA,MAAM,EAANA;AAAD,CAAd,EAAwB;AAAES,EAAAA,UAAU,EAAE;AAAd,CAAxB,C;IAAvCC,O,sBAAAA,O;IAASC,Q,sBAAAA,Q","sourcesContent":["import createDataContext from \"./createDataContext\"\nimport AsyncStorage from \"@react-native-community/async-storage\"\nconst authReducer = (state, action) => {\n\tconsole.log('state test: ', state);\n\tswitch (action.type) {\n\t\tdefault:\n\t\t\treturn state;\n\t}\n\n}\n\n\nconst signUp  = dispatch =>async (payload)=>{\n\ttry{\n\t\tconst response = await trackApi.post(\"/singup\",payload);\n\t\tawait AsyncStorage.setItem(\"token\",response.data.token)\n\t\tdispatch({type:\"singUpSuccess\",token:response.data.token})\n\t}catch(err){\n\t\tdispatch({\n\t\t\ttype:\"singUpError\",\n\t\t\tpayload:\"\"\n\t\t})\n\t}\n\n}\n\nexport const { Context, Provider } = createDataContext(authReducer, {signUp}, { isSingedIn: false })\n\n\n"]},"metadata":{},"sourceType":"module"}