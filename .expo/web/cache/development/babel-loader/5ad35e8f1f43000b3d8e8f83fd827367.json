{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/mrbug/projects/mobile/tracks/src/components/App.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nvar Stack = createStackNavigator();\nimport CreateTrack from \"../screens/CreateTrack\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nimport TrackDetail from \"../screens/TrackDetail\";\nimport TrackLIst from \"../screens/TrackLIst\";\nimport AccountScreen from \"../screens/AccountScreen\";\nimport { Provider as AuthProvider } from \"../context/AuthContext\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\nimport { Provider as TrackProvider } from \"../context/TrackContext\";\nimport { Provider as LocationProvider } from \"../context/LocationContext\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nvar Tab = createBottomTabNavigator();\nvar Navigator = Stack.Navigator,\n    Screen = Stack.Screen;\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nexport default function App() {\n  var LoggedIn = [{\n    name: \"CreateTrack\",\n    component: CreateTrack,\n    options: {}\n  }, {\n    name: \"TrackDetail\",\n    component: TrackDetail,\n    options: {}\n  }, {\n    name: \"TrackList\",\n    component: TrackLIst,\n    options: {\n      title: \"Truck\"\n    }\n  }, {\n    name: \"AccountScreen\",\n    component: AccountScreen,\n    options: {}\n  }, {\n    name: \"RegisterScreen\",\n    component: RegisterScreen,\n    options: {\n      title: \"Register\"\n    }\n  }, {\n    name: \"LoginScreen\",\n    component: LoginScreen,\n    options: {\n      title: \"Login\",\n      headerLeft: null\n    }\n  }];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fetching = _useState2[0],\n      setFetching = _useState2[1];\n\n  var state = useContext(AuthContext);\n\n  var _useState3 = useState(\"RegisterScreen\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      homeScreen = _useState4[0],\n      setHomeScreen = _useState4[1];\n\n  useEffect(function () {\n    getToken();\n  }, []);\n\n  var getToken = function getToken() {\n    var value;\n    return _regeneratorRuntime.async(function getToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 3:\n            value = _context.sent;\n            setHomeScreen(value ? \"TrackList\" : \"RegisterScreen\");\n            setFetching(false);\n            _context.next = 10;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  if (fetching) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }\n    }, \"fetching\");\n  } else {\n    return React.createElement(React.Fragment, null, homeScreen == \"RegisterScreen\" ? React.createElement(Navigator, {\n      initialRouteName: homeScreen,\n      headerMode: \"screen\",\n      screenOptions: {\n        headerTintColor: 'white',\n        headerStyle: {\n          backgroundColor: \"black\",\n          color: \"white\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }\n    }, LoggedIn.map(function (temp, index) {\n      return React.createElement(Screen, {\n        name: temp.name,\n        key: index,\n        component: temp.component,\n        options: temp.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 8\n        }\n      });\n    })) : React.createElement(TrackProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }\n    }, React.createElement(LocationProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, React.createElement(Tab.Navigator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }\n    }, React.createElement(Tab.Screen, {\n      name: \"TrackList\",\n      component: TrackLIst,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), React.createElement(Tab.Screen, {\n      name: \"CreateTrack\",\n      component: CreateTrack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), React.createElement(Tab.Screen, {\n      name: \"AccountScreen\",\n      component: AccountScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    })))));\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/mrbug/projects/mobile/tracks/src/components/App.js"],"names":["React","useContext","useState","useEffect","NavigationContainer","createStackNavigator","Stack","CreateTrack","LoginScreen","RegisterScreen","TrackDetail","TrackLIst","AccountScreen","Provider","AuthProvider","Context","AuthContext","TrackProvider","LocationProvider","createBottomTabNavigator","Tab","Navigator","Screen","App","LoggedIn","name","component","options","title","headerLeft","fetching","setFetching","state","homeScreen","setHomeScreen","getToken","AsyncStorage","getItem","value","headerTintColor","headerStyle","backgroundColor","color","map","temp","index","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nconst Stack = createStackNavigator();\nimport CreateTrack from \"../screens/CreateTrack\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nimport TrackDetail from \"../screens/TrackDetail\";\nimport TrackLIst from \"../screens/TrackLIst\";\nimport AccountScreen from \"../screens/AccountScreen\";\nimport { Provider as AuthProvider } from \"../context/AuthContext\"\nimport { Context as AuthContext } from \"../context/AuthContext\"\nimport { Provider as TrackProvider } from '../context/TrackContext';\n\nimport { Provider as LocationProvider } from '../context/LocationContext';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nconst Tab = createBottomTabNavigator();\n\nconst { Navigator, Screen } = Stack;\nimport { AsyncStorage } from \"react-native\"\n\nexport default function App() {\n\tconst LoggedIn = [\n\t\t{ name: \"CreateTrack\", component: CreateTrack, options: {} },\n\t\t{ name: \"TrackDetail\", component: TrackDetail, options: {} },\n\t\t{ name: \"TrackList\", component: TrackLIst, options: { title: \"Truck\" } },\n\t\t{ name: \"AccountScreen\", component: AccountScreen, options: {} },\n\t\t{ name: \"RegisterScreen\", component: RegisterScreen, options: { title: \"Register\" } },\n\t\t{ name: \"LoginScreen\", component: LoginScreen, options: { title: \"Login\", headerLeft: null } },\n\t]\n\tconst [fetching, setFetching] = useState(false)\n\tconst state = useContext(AuthContext);\n\tconst [homeScreen, setHomeScreen] = useState(\"RegisterScreen\")\n\tuseEffect(() => {\n\t\tgetToken()\n\t}, [])\n\n\tvar getToken = async () => {\n\t\ttry {\n\t\t\tconst value = await AsyncStorage.getItem('token');\n\t\t\tsetHomeScreen(value ? \"TrackList\" : \"RegisterScreen\");\n\t\t\tsetFetching(false)\n\t\t} catch (error) {\n\t\t\t// Error retrieving data\n\t\t}\n\t}\n\n\n\tif (fetching) {\n\t\treturn <Text>fetching</Text>\n\t} else {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{homeScreen == \"RegisterScreen\" ?\n\t\t\t\t\t<Navigator initialRouteName={homeScreen} headerMode=\"screen\" screenOptions={{ headerTintColor: 'white', headerStyle: { backgroundColor: \"black\", color: \"white\" }, }}>\n\t\t\t\t\t\t{LoggedIn.map((temp, index) => (\n\t\t\t\t\t\t\t<Screen name={temp.name} key={index} component={temp.component} options={temp.options} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Navigator>\n\t\t\t\t\t:\n\t\t\t\t\t<TrackProvider>\n\t\t\t\t\t\t<LocationProvider>\n\t\t\t\t\t\t\t<Tab.Navigator>\n\t\t\t\t\t\t\t\t<Tab.Screen name=\"TrackList\" component={TrackLIst} />\n\t\t\t\t\t\t\t\t<Tab.Screen name=\"CreateTrack\" component={CreateTrack} />\n\t\t\t\t\t\t\t\t<Tab.Screen name=\"AccountScreen\" component={AccountScreen} />\n\t\t\t\t\t\t\t</Tab.Navigator>\n\t\t\t\t\t\t</LocationProvider>\n\t\t\t\t\t</TrackProvider>\n\t\t\t\t}\n\n\t\t\t</>\n\t\t);\n\t}\n\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#fff',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}