{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport createDataContext from \"./createDataContext\";\nimport trackerApi from \"../Api/api\";\n\nvar trackReducer = function trackReducer(state, action) {\n  switch (action.type) {\n    case 'fetch_tracks':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar fetchTracks = function fetchTracks(dispatch) {\n  return function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(trackerApi.get('/tracks'));\n\n          case 2:\n            response = _context.sent;\n            dispatch({\n              type: 'fetch_tracks',\n              payload: response.data\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar createTrack = function createTrack(dispatch) {\n  return function _callee2(name, locations) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(trackerApi.post('/tracks', {\n              name: name,\n              locations: locations\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar _createDataContext = createDataContext(trackReducer, {\n  fetchTracks: fetchTracks,\n  createTrack: createTrack\n}, []),\n    Provider = _createDataContext.Provider,\n    Context = _createDataContext.Context;\n\nexport { Provider, Context };","map":{"version":3,"sources":["/home/mrbug/projects/mobile/tracks/src/context/TrackContext.js"],"names":["createDataContext","trackerApi","trackReducer","state","action","type","payload","fetchTracks","dispatch","get","response","data","createTrack","name","locations","post","Provider","Context"],"mappings":";AAAA,OAAOA,iBAAP;AACA,OAAOC,UAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPD;;AASA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACPP,UAAU,CAACQ,GAAX,CAAe,SAAf,CADO;;AAAA;AACxBC,YAAAA,QADwB;AAE9BF,YAAAA,QAAQ,CAAC;AAAEH,cAAAA,IAAI,EAAE,cAAR;AAAwBC,cAAAA,OAAO,EAAEI,QAAQ,CAACC;AAA1C,aAAD,CAAR;;AAF8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAJ;AAAA,CAA5B;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAJ,QAAQ;AAAA,SAAI,kBAAOK,IAAP,EAAaC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACxBb,UAAU,CAACc,IAAX,CAAgB,SAAhB,EAA2B;AAAEF,cAAAA,IAAI,EAAJA,IAAF;AAAQC,cAAAA,SAAS,EAATA;AAAR,aAA3B,CADwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAJ;AAAA,CAA5B;;yBAIqCd,iBAAiB,CACpDE,YADoD,EAEpD;AAAEK,EAAAA,WAAW,EAAXA,WAAF;AAAeK,EAAAA,WAAW,EAAXA;AAAf,CAFoD,EAGpD,EAHoD,C;IAAvCI,Q,sBAAAA,Q;IAAUC,O,sBAAAA,O","sourcesContent":["import createDataContext from './createDataContext';\nimport trackerApi from '../Api/api';\n\nconst trackReducer = (state, action) => {\n  switch (action.type) {\n    case 'fetch_tracks':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst fetchTracks = dispatch => async () => {\n  const response = await trackerApi.get('/tracks');\n  dispatch({ type: 'fetch_tracks', payload: response.data });\n};\nconst createTrack = dispatch => async (name, locations) => {\n  await trackerApi.post('/tracks', { name, locations });\n};\n\nexport const { Provider, Context } = createDataContext(\n  trackReducer,\n  { fetchTracks, createTrack },\n  []\n);\n"]},"metadata":{},"sourceType":"module"}