{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport { Accuracy, requestPermissionsAsync, watchPositionAsync } from 'expo-location';\nexport default (function (shouldTrack, callback) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      err = _useState2[0],\n      setErr = _useState2[1];\n\n  useEffect(function () {\n    var subscriber;\n\n    var startWatching = function startWatching() {\n      var _await$requestPermiss, granted;\n\n      return _regeneratorRuntime.async(function startWatching$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(requestPermissionsAsync());\n\n            case 3:\n              _await$requestPermiss = _context.sent;\n              granted = _await$requestPermiss.granted;\n\n              if (granted) {\n                _context.next = 7;\n                break;\n              }\n\n              throw new Error('Location permission not granted');\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(watchPositionAsync({\n                accuracy: Accuracy.BestForNavigation,\n                timeInterval: 1000,\n                distanceInterval: 10\n              }, callback));\n\n            case 9:\n              subscriber = _context.sent;\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              setErr(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 12]], Promise);\n    };\n\n    if (shouldTrack) {\n      startWatching();\n    } else {\n      if (subscriber) {\n        subscriber.remove();\n      }\n\n      subscriber = null;\n    }\n\n    return function () {\n      if (subscriber) {\n        subscriber.remove();\n      }\n    };\n  }, [shouldTrack, callback]);\n  return [err];\n});","map":{"version":3,"sources":["/home/mrbug/projects/mobile/tracks/src/hooks/useLocation.js"],"names":["useState","useEffect","Accuracy","requestPermissionsAsync","watchPositionAsync","shouldTrack","callback","err","setErr","subscriber","startWatching","granted","Error","accuracy","BestForNavigation","timeInterval","distanceInterval","remove"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SACEC,QADF,EAEEC,uBAFF,EAGEC,kBAHF,QAIO,eAJP;AAMA,gBAAe,UAACC,WAAD,EAAcC,QAAd,EAA2B;AAAA,kBAClBN,QAAQ,CAAC,IAAD,CADU;AAAA;AAAA,MACjCO,GADiC;AAAA,MAC5BC,MAD4B;;AAGxCP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIQ,UAAJ;;AACA,QAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEQP,uBAAuB,EAF/B;;AAAA;AAAA;AAEVQ,cAAAA,OAFU,yBAEVA,OAFU;;AAAA,kBAGbA,OAHa;AAAA;AAAA;AAAA;;AAAA,oBAIV,IAAIC,KAAJ,CAAU,iCAAV,CAJU;;AAAA;AAAA;AAAA,+CAOCR,kBAAkB,CACnC;AACES,gBAAAA,QAAQ,EAAEX,QAAQ,CAACY,iBADrB;AAEEC,gBAAAA,YAAY,EAAE,IAFhB;AAGEC,gBAAAA,gBAAgB,EAAE;AAHpB,eADmC,EAMnCV,QANmC,CAPnB;;AAAA;AAOlBG,cAAAA,UAPkB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgBlBD,cAAAA,MAAM,aAAN;;AAhBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtB;;AAoBA,QAAIH,WAAJ,EAAiB;AACfK,MAAAA,aAAa;AACd,KAFD,MAEO;AACL,UAAID,UAAJ,EAAgB;AACdA,QAAAA,UAAU,CAACQ,MAAX;AACD;;AACDR,MAAAA,UAAU,GAAG,IAAb;AACD;;AAED,WAAO,YAAM;AACX,UAAIA,UAAJ,EAAgB;AACdA,QAAAA,UAAU,CAACQ,MAAX;AACD;AACF,KAJD;AAKD,GApCQ,EAoCN,CAACZ,WAAD,EAAcC,QAAd,CApCM,CAAT;AAsCA,SAAO,CAACC,GAAD,CAAP;AACD,CA1CD","sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n  Accuracy,\n  requestPermissionsAsync,\n  watchPositionAsync\n} from 'expo-location';\n\nexport default (shouldTrack, callback) => {\n  const [err, setErr] = useState(null);\n\n  useEffect(() => {\n    let subscriber;\n    const startWatching = async () => {\n      try {\n        const { granted } = await requestPermissionsAsync();\n        if (!granted) {\n          throw new Error('Location permission not granted');\n        }\n        \n        subscriber = await watchPositionAsync(\n          {\n            accuracy: Accuracy.BestForNavigation,\n            timeInterval: 1000,\n            distanceInterval: 10\n          },\n          callback\n        );\n      } catch (e) {\n        setErr(e);\n      }\n    };\n\n    if (shouldTrack) {\n      startWatching();\n    } else {\n      if (subscriber) {\n        subscriber.remove();\n      }\n      subscriber = null;\n    }\n\n    return () => {\n      if (subscriber) {\n        subscriber.remove();\n      }\n    };\n  }, [shouldTrack, callback]);\n\n  return [err];\n};\n"]},"metadata":{},"sourceType":"module"}