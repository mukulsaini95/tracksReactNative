{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport createDataContext from \"./createDataContext\";\n\nvar locationReducer = function locationReducer(state, action) {\n  switch (action.type) {\n    case 'add_current_location':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentLocation: action.payload\n      });\n\n    case 'start_recording':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        recording: true\n      });\n\n    case 'stop_recording':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        recording: false\n      });\n\n    case 'add_location':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        locations: [].concat(_toConsumableArray(state.locations), [action.payload])\n      });\n\n    case 'change_name':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.payload\n      });\n\n    case 'reset':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: '',\n        locations: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar changeName = function changeName(dispatch) {\n  return function (name) {\n    dispatch({\n      type: 'change_name',\n      payload: name\n    });\n  };\n};\n\nvar startRecording = function startRecording(dispatch) {\n  return function () {\n    dispatch({\n      type: 'start_recording'\n    });\n  };\n};\n\nvar stopRecording = function stopRecording(dispatch) {\n  return function () {\n    dispatch({\n      type: 'stop_recording'\n    });\n  };\n};\n\nvar addLocation = function addLocation(dispatch) {\n  return function (location, recording) {\n    dispatch({\n      type: 'add_current_location',\n      payload: location\n    });\n\n    if (recording) {\n      dispatch({\n        type: 'add_location',\n        payload: location\n      });\n    }\n  };\n};\n\nvar reset = function reset(dispatch) {\n  return function () {\n    dispatch({\n      type: 'reset'\n    });\n  };\n};\n\nvar _createDataContext = createDataContext(locationReducer, {\n  startRecording: startRecording,\n  stopRecording: stopRecording,\n  addLocation: addLocation,\n  changeName: changeName,\n  reset: reset\n}, {\n  name: '',\n  recording: false,\n  locations: [],\n  currentLocation: null\n}),\n    Context = _createDataContext.Context,\n    Provider = _createDataContext.Provider;\n\nexport { Context, Provider };","map":{"version":3,"sources":["/home/mrbug/projects/mobile/tracks/src/context/LocationContext.js"],"names":["createDataContext","locationReducer","state","action","type","currentLocation","payload","recording","locations","name","changeName","dispatch","startRecording","stopRecording","addLocation","location","reset","Context","Provider"],"mappings":";;;;;;;AAAA,OAAOA,iBAAP;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACzC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AACE,6CAAYF,KAAZ;AAAmBG,QAAAA,eAAe,EAAEF,MAAM,CAACG;AAA3C;;AACF,SAAK,iBAAL;AACE,6CAAYJ,KAAZ;AAAmBK,QAAAA,SAAS,EAAE;AAA9B;;AACF,SAAK,gBAAL;AACE,6CAAYL,KAAZ;AAAmBK,QAAAA,SAAS,EAAE;AAA9B;;AACF,SAAK,cAAL;AACE,6CAAYL,KAAZ;AAAmBM,QAAAA,SAAS,+BAAMN,KAAK,CAACM,SAAZ,IAAuBL,MAAM,CAACG,OAA9B;AAA5B;;AACF,SAAK,aAAL;AACE,6CAAYJ,KAAZ;AAAmBO,QAAAA,IAAI,EAAEN,MAAM,CAACG;AAAhC;;AACF,SAAK,OAAL;AACE,6CAAYJ,KAAZ;AAAmBO,QAAAA,IAAI,EAAE,EAAzB;AAA6BD,QAAAA,SAAS,EAAE;AAAxC;;AACF;AACE,aAAON,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,IAAMQ,UAAU,GAAG,SAAbA,UAAa,CAAAC,QAAQ;AAAA,SAAI,UAAAF,IAAI,EAAI;AACrCE,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAE,aAAR;AAAuBE,MAAAA,OAAO,EAAEG;AAAhC,KAAD,CAAR;AACD,GAF0B;AAAA,CAA3B;;AAGA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAAAD,QAAQ;AAAA,SAAI,YAAM;AACvCA,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAF8B;AAAA,CAA/B;;AAGA,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAAAF,QAAQ;AAAA,SAAI,YAAM;AACtCA,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAF6B;AAAA,CAA9B;;AAGA,IAAMU,WAAW,GAAG,SAAdA,WAAc,CAAAH,QAAQ;AAAA,SAAI,UAACI,QAAD,EAAWR,SAAX,EAAyB;AACvDI,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAE,sBAAR;AAAgCE,MAAAA,OAAO,EAAES;AAAzC,KAAD,CAAR;;AACA,QAAIR,SAAJ,EAAe;AACbI,MAAAA,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE,cAAR;AAAwBE,QAAAA,OAAO,EAAES;AAAjC,OAAD,CAAR;AACD;AACF,GAL2B;AAAA,CAA5B;;AAMA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAL,QAAQ;AAAA,SAAI,YAAM;AAC9BA,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAFqB;AAAA,CAAtB;;yBAIqCJ,iBAAiB,CACpDC,eADoD,EAEpD;AAAEW,EAAAA,cAAc,EAAdA,cAAF;AAAkBC,EAAAA,aAAa,EAAbA,aAAlB;AAAiCC,EAAAA,WAAW,EAAXA,WAAjC;AAA8CJ,EAAAA,UAAU,EAAVA,UAA9C;AAA0DM,EAAAA,KAAK,EAALA;AAA1D,CAFoD,EAGpD;AAAEP,EAAAA,IAAI,EAAE,EAAR;AAAYF,EAAAA,SAAS,EAAE,KAAvB;AAA8BC,EAAAA,SAAS,EAAE,EAAzC;AAA6CH,EAAAA,eAAe,EAAE;AAA9D,CAHoD,C;IAAvCY,O,sBAAAA,O;IAASC,Q,sBAAAA,Q","sourcesContent":["import createDataContext from \"./createDataContext\"\n\nconst locationReducer = (state, action) => {\n  switch (action.type) {\n    case 'add_current_location':\n      return { ...state, currentLocation: action.payload };\n    case 'start_recording':\n      return { ...state, recording: true };\n    case 'stop_recording':\n      return { ...state, recording: false };\n    case 'add_location':\n      return { ...state, locations: [...state.locations, action.payload] };\n    case 'change_name':\n      return { ...state, name: action.payload };\n    case 'reset':\n      return { ...state, name: '', locations: [] };\n    default:\n      return state;\n  }\n};\n\nconst changeName = dispatch => name => {\n  dispatch({ type: 'change_name', payload: name });\n};\nconst startRecording = dispatch => () => {\n  dispatch({ type: 'start_recording' });\n};\nconst stopRecording = dispatch => () => {\n  dispatch({ type: 'stop_recording' });\n};\nconst addLocation = dispatch => (location, recording) => {\n  dispatch({ type: 'add_current_location', payload: location });\n  if (recording) {\n    dispatch({ type: 'add_location', payload: location });\n  }\n};\nconst reset = dispatch => () => {\n  dispatch({ type: 'reset' });\n};\n\nexport const { Context, Provider } = createDataContext(\n  locationReducer,\n  { startRecording, stopRecording, addLocation, changeName, reset },\n  { name: '', recording: false, locations: [], currentLocation: null }\n);\n"]},"metadata":{},"sourceType":"module"}